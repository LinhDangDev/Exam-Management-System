:root {
    --fraction-rem-height: calc(95vh / 16);
    font-size: 1.2vw;
}

* {
    box-sizing: border-box;
    font-family: 'Segoe UI', sans-serif;
}

body {
    margin: 0;
}

.btn {
    display: flex;
    position: absolute;
    width: 10%;
    height: calc(var(--fraction-rem-height) * 1.0);
    border-radius: 5px;
    justify-content: center;
    flex-direction: column;
    text-align: center;
    font-family: "Segoe UI";
    font-size: 2.3vh;
    font-style: normal;
    font-weight: 980;
    line-height: normal;
}

    .btn:hover {
        opacity: 0.8;
    }

/* header */
.header {
    z-index: 1;
    position: sticky;
    width: 100%;
    top: 1px;
    height: calc(var(--fraction-rem-height) * 1.8);
    background: #f0f0f0;
}

    .header .body {
        display: flex;
        align-items: center;
        padding-left: calc(var(--fraction-rem-height) * 1);
        padding-right: calc(var(--fraction-rem-height) * 1.5);
    }

    .header .nav {
        display: flex;
        margin-left: auto;
        width: 18%;
        margin-top: calc(var(--fraction-rem-height) * 0.5);
        height: calc(var(--fraction-rem-height) * 1.2);
    }

    .header .btn-exit {
        justify-content: center;
        align-items: center;
        margin-left: calc(var(--fraction-rem-height) * 2.3);
        color: #fff;
        background: #ff4141;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .header .logo {
        position: absolute;
        height: 45%;
    }

.main-result {
    position: relative;
    margin-top: calc(var(--fraction-rem-height) * 0.3);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    width: 100%;
    height: calc(var(--fraction-rem-height) * 25);
    font-family: 'Segoe UI', sans-serif;
}

.layout-left {
    display: flex;
    width: 80%;
}

.imformation-container {
    position: absolute;
    margin-top: calc(var(--fraction-rem-height) * 0.3);
    width: 80%;
    height: calc(var(--fraction-rem-height) * 24);
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #D9D9D9;
    border-radius: 22px;
    background: rgba(255, 255, 255, 0.3);
    box-shadow: 5px 6px 69px 19px rgba(0, 0, 44, 0.1);
    animation: floatUp 1.5s ease forwards;
}

@keyframes floatUp {
    from {
        transform: translateY(30%);
    }

    to {
        transform: translateY(0%);
    }
}

.img-container {
    height: calc(var(--fraction-rem-height) * 2);
    left: 50%;
    right: 50%;
    background-size: cover;
    background-position: 50% 50%;
    margin-top: calc(var(--fraction-rem-height) * 0.5);
}

    .img-container .img {
        margin-top: calc(var(--fraction-rem-height) * 3.5);
        margin-left: calc(var(--fraction-rem-height) * 1.5);
        width: 30%;
        border-style: solid;
        border-color: #000000;
        border-width: 10px;
        border-radius: 50%;
    }

.result-score  {
    align-items: center;
    display: grid;
    margin-left: calc(var(--fraction-rem-height) * 1.5);
    width: 30%;
}

.show-result {
    width: 15vh;
    top: 50%;
    bottom: 50%;
    height: 15vh;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4vh;
    font-weight: bolder;
    border: 1px solid rgb(204, 204, 204);
    border-radius: 5px;
}

.information-student {
    display: flex;
    width: 100%;
}

.label {
    display: grid;
    grid-template-columns: 1fr 5fr;
    grid-column-gap: 3%;
    width: 100%;
}

.show-text.hidden {
    visibility: hidden;
}
/*.label h1,*/
.label h3,
.input-text {
 
    font-size: 1.5vw;
    font-weight: bold;
}

.show-text {
    font-weight: 600;
    text-align: start;
    width: 83%;
    padding: 1%;
    border: 1px dashed #ccc;
}

hr {
    width: 77%;
    height: calc(var(--fraction-rem-height) * 0.1);
    margin: calc(var(--fraction-rem-height) * 0.5) 0;
    background: black;
}



/* grid container */
.grid-container {
    width: 60vw;
    height: 15vh; /* Đặt height: auto để nó có thể co dãn theo nội dung bên trong */
    display: grid; /* Sử dụng display: grid thay vì display: flex */
    grid-template-columns: repeat(15, 0.5fr); /* Chia grid container thành 6 cột có chiều rộng bằng nhau */
    gap: 1%; /* Tạo khoảng cách giữa các grid item */
}

.grid-item {
    width: 75%;
    height: 75%;
    border-radius: 5px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.45vw;
    margin-top: 30px;
    color: rgb(255, 255, 255);
}

.grid-red {
    background-color: red;
}

.grid-green {
    background-color: green;
}
